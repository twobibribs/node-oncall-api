name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      security-events: write
    env: 
      PROJECT_KEY: simple
    steps:
    - uses: actions/checkout@v3
    - name: Setup AWS ECR Details
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: "us-east-1"


    - name: Login to Amazon ECR
      id: login-pf-aws-ecr
      uses: aws-actions/amazon-ecr-login@v1
      

    - name: Build and push the tagged docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
        ECR_REPOSITORY: "oncall"
        IMAGE_TAG: ${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    - name: Run Orca Container Image Scan
      env:
        ECR_REGISTRY: ${{ steps.login-pf-aws-ecr.outputs.registry }}
        ECR_REPOSITORY: "oncall"
        IMAGE_TAG: ${{ github.run_number }}
      uses: orcasecurity/shiftleft-container-image-action@v1
      id: orcasecurity_container_image_scan
      with:
        api_token: ${{ secrets.ORCA_SECURITY_API_TOKEN }}
        project_key: ${{ env.PROJECT_KEY }}
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
        format: "sarif"
        output:
          "results/"
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      if: ${{ always() && steps.orcasecurity_container_image_scan.outputs.exit_code != 1 }}
      with:
        sarif_file: results/image.sarif

